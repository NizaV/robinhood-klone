[{"/Users/nizavera/robinhood-klone/src/reportWebVitals.js":"1","/Users/nizavera/robinhood-klone/src/Header.js":"2","/Users/nizavera/robinhood-klone/src/LineGraph.js":"3","/Users/nizavera/robinhood-klone/src/App.js":"4"},{"size":362,"mtime":1606679117513,"results":"5","hashOfConfig":"6"},{"size":1223,"mtime":1612407464766,"results":"7","hashOfConfig":"6"},{"size":2711,"mtime":1611098714733,"results":"8","hashOfConfig":"6"},{"size":464,"mtime":1610372677510,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cd3583",{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nizavera/robinhood-klone/src/reportWebVitals.js",[],"/Users/nizavera/robinhood-klone/src/Header.js",["19","20","21","22","23","24"],"/Users/nizavera/robinhood-klone/src/LineGraph.js",["25"],"import React, {useEffect, useState} from 'react'\nimport {Line} from 'react-chartjs-2'\nimport './css/Linegraph.css'\n\nfunction LineGraph() {\n\n    const [ graphData, setGraphData ] = useState([]);\n    const data= [\n        {\n            x: 10,\n            y: 50\n        },\n        {\n            x: 25,\n            y: 10\n        },\n        {\n            x: 12,\n            y: 30\n        }\n    ]\n\n    const createTestData = () => {\n        let data = [];\n        let value = 50;\n        for(var i = 0; i < 366; i++){\n        let date = new Date();\n        date.setHours(0,0,0,0);\n        date.setDate(i);\n        value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\n        data.push({x: date, y: value});\n    }\n    setGraphData(data);\n    }\n    useEffect(() => {\n        createTestData();\n    }, [])\n\n    return (\n        <div className=\"linegraph\">\n            <Line\n                data={{\n                    datasets: [\n                        {\n                            type: \"line\",\n                            data: graphData,\n                            backgroundColor: \"black\",\n                            borderColor: \"#5AC53B\",\n                            borderWidth: 2,\n                            pointBorderColor: 'rgba(0, 0, 0, 0)',\n                            pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                            pointHoverBackgroundColor: \"#5AC53B\",\n                            pointHoverBorderColor: \"#000000\",\n                            pointHoverBorderWidth: 4,\n                            pointHoverRadius: 6,\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        mode: \"index\",\n                        intersect: false\n                    },\n                    scales: {\n                        xAxes: [\n                            {\n                              type: \"time\",\n                              time: {\n                                format: \"MM/DD/YY\",\n                                tooltipFormat: \"ll\",\n                              },\n                              ticks: {\n                                display: false,\n                              }\n                            },\n                          ],\n                        yAxes: [{\n                            ticks: {\n                                display: false\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n\nexport default LineGraph\n","/Users/nizavera/robinhood-klone/src/App.js",[],{"ruleId":"26","severity":1,"message":"27","line":21,"column":17,"nodeType":"28","endLine":21,"endColumn":46},{"ruleId":"29","severity":1,"message":"30","line":32,"column":17,"nodeType":"28","endLine":32,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":33,"column":17,"nodeType":"28","endLine":33,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":34,"column":17,"nodeType":"28","endLine":34,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":35,"column":17,"nodeType":"28","endLine":35,"endColumn":29},{"ruleId":"29","severity":1,"message":"30","line":36,"column":17,"nodeType":"28","endLine":36,"endColumn":29},{"ruleId":"31","severity":1,"message":"32","line":8,"column":11,"nodeType":"33","messageId":"34","endLine":8,"endColumn":15},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]